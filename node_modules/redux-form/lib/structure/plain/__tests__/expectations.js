"use strict";

exports.__esModule = true;
exports.default = void 0;

var _isObject2 = _interopRequireDefault(require("lodash/isObject"));

var _isEqual2 = _interopRequireDefault(require("lodash/isEqual"));

var _jestMatcherUtils = require("jest-matcher-utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var expectations = {
  toBeAMap: function toBeAMap(actual) {
    var pass = (0, _isObject2.default)(actual);
    return {
      pass: pass,
      message: function message() {
        return "expected " + actual + " to be an object";
      }
    };
  },
  toBeAList: function toBeAList(actual) {
    var pass = Array.isArray(actual);
    return {
      pass: pass,
      message: function message() {
        return "expected " + actual + " to be an array";
      }
    };
  },
  toBeSize: function toBeSize(actual, size) {
    var pass = actual && Object.keys(actual).length === size;
    return {
      pass: pass,
      message: function message() {
        return "expected " + actual + " to contain " + size + " elements";
      }
    };
  },
  toEqualMap: function toEqualMap(actual, expected) {
    var pass = (0, _isEqual2.default)(actual, expected);
    return {
      pass: pass,
      message: function message() {
        return (0, _jestMatcherUtils.matcherHint)('.toEqualMap') + '\n\n' + "Expected value to equal:\n" + ("  " + (0, _jestMatcherUtils.printExpected)(expected) + "\n") + "Received:\n" + ("  " + (0, _jestMatcherUtils.printReceived)(actual));
      }
    };
  },
  toContainExactly: function toContainExactly(actual, expected) {
    var sortedActual = actual.slice();
    sortedActual.sort();
    var sortedExpected = expected.slice();
    sortedExpected.sort();
    var pass = this.equals(sortedActual, sortedExpected);
    return {
      pass: pass,
      message: function message() {
        return (0, _jestMatcherUtils.matcherHint)('.toContainExactly') + '\n\n' + "Expected value to contain:\n" + ("  " + (0, _jestMatcherUtils.printExpected)(sortedExpected) + "\n") + "Received:\n" + ("  " + (0, _jestMatcherUtils.printReceived)(sortedActual));
      }
    };
  }
};
var _default = expectations;
exports.default = _default;